{"version":3,"sources":["styles/typos.js","components/InfoItem/styles.js","styles/colors.js","components/InfoItem/index.jsx","components/summary/styles.js","components/summary/index.jsx","constants/index.js","pages/App/styles.js","components/Spinner/styles.js","styles/index.js","components/Spinner/index.jsx","utils/useApi.js","utils/APIUtils.js","components/LoadingButton/styles.js","components/LoadingButton/index.jsx","components/Table/styles.js","components/Table/index.jsx","pages/App/index.jsx","reportWebVitals.js","components/ErrorBoundary/index.jsx","i18n.js","index.js"],"names":["H1","styled","h1","H4","h4","H5","h5","ItemContainer","div","props","recovered","confirmed","InfoItem","title","newCases","totalCases","rest","toLocaleString","MainContainer","Summary","console","log","t","useTranslation","details","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","SUMMARY_API","AppContainer","rotate360","keyframes","Spin","FlexCenter","Spinner","useApi","url","method","useState","response","setResponse","loading","setLoading","error","setError","useEffect","fetchData","type","payload","endpoint","fetch","then","json","networkCall","catch","finally","useStyles","makeStyles","theme","root","display","alignItems","justifyContent","wrapper","margin","spacing","position","buttonProgress","color","green","top","left","marginTop","marginLeft","LoadingButton","classes","className","Button","variant","buttonClassname","disabled","CircularProgress","size","columns","field","headerName","width","DataTable","data","getRowId","row","ID","rows","perPageSize","App","stats","isLoading","Global","countries","Countries","onClick","Error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","state","hasError","errorInfo","logErrorToMyService","this","children","React","Component","withTranslation","resources","en","translation","i18n","use","initReactI18next","init","lng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5feaae9d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const H1 = styled.h1`\n  font-size: 22px;\n  font-weight: 600;\n`;\n\nexport const H4 = styled.h4`\n  font-size: 13px;\n  font-weight: 900;\n`;\n\nexport const H5 = styled.h5`\n  font-size: 12px;\n  font-weight: 600;\n`;\n","import styled from \"styled-components\";\nimport { red, green, grey } from \"../../styles/colors\";\n\nexport const ItemContainer = styled.div`\n  width: calc(25%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${(props) => (props.recovered ? green : props.confirmed ? red : grey)};\n  h4 {\n    opacity: 0.6;\n  }\n`;\n","export const red = \"#ff073a\";\nexport const green = \"#28a745\";\nexport const grey = \"#6c757d\";\n","import React from \"react\";\nimport { H1, H4, H5 } from \"../../styles/typos\";\nimport { ItemContainer } from \"./styles\";\n\nexport default function InfoItem(props) {\n  const { title, newCases, totalCases, ...rest } = props;\n  return (\n    <ItemContainer {...rest}>\n      <H5>{title}</H5>\n      <H4>+ {newCases.toLocaleString()}</H4>\n      <H1>{totalCases.toLocaleString()}</H1>\n    </ItemContainer>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n  margin: 50px;\n  display: flex;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport InfoItem from \"../InfoItem\";\n\nimport { MainContainer } from \"./styles\";\n\nexport default function Summary(props) {\n  console.log(\"props\", props);\n  const { t } = useTranslation();\n  const {\n    NewConfirmed,\n    NewDeaths,\n    NewRecovered,\n    TotalConfirmed,\n    TotalDeaths,\n    TotalRecovered,\n  } = props?.details;\n  return (\n    <MainContainer>\n      <InfoItem\n        title={t(\"confirmed\")}\n        confirmed\n        newCases={NewConfirmed}\n        totalCases={TotalConfirmed}\n      />\n      <InfoItem\n        title={t(\"recovered\")}\n        recovered\n        newCases={NewRecovered}\n        totalCases={TotalRecovered}\n      />\n      <InfoItem\n        title={t(\"deceased\")}\n        newCases={NewDeaths}\n        totalCases={TotalDeaths}\n      />\n    </MainContainer>\n  );\n}\n","// origin domains\nexport const BASE_DOMAIN = \"https://api.covid19api.com/\";\n\n// resources\nexport const SUMMARY_API = \"summary\";\n","import styled from \"styled-components\";\n\n// const white = \"#fff\";\n// const light = \"#f8f9fa\";\n// const dark = \"#343a40\";\n// const black = \"#000\";\n\nexport const AppContainer = styled.div`\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin-bottom: 0;\n  }\n`;\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spin = styled.div`\n  animation: ${rotate360} 1s linear infinite;\n  transform: translateZ(0);\n\n  border-top: 2px solid grey;\n  border-right: 2px solid grey;\n  border-bottom: 2px solid grey;\n  border-left: 4px solid black;\n  background: transparent;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n`;\n","import styled from \"styled-components\";\n\nexport const FlexCenter = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { Spin } from \"./styles\";\nimport { FlexCenter } from \"../../styles\";\n\nexport default function Spinner() {\n  return (\n    <FlexCenter>\n      <Spin />\n    </FlexCenter>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { SUMMARY_API } from \"../constants\";\nimport { networkCall } from \"./APIUtils\";\n\n// custom hook to provide api response with status, error, refresh methods\nexport default function useApi(url, method) {\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, [url, method]);\n\n  const fetchData = () => {\n    setLoading(true);\n    networkCall(SUMMARY_API, \"GET\")\n      .then(function (response) {\n        setResponse(response);\n      })\n      .catch(function (error) {\n        setError(error);\n      })\n      .finally(function () {\n        setLoading(false);\n      });\n  };\n\n  const refresh = () => {\n    // do any other cleanups required here\n    fetchData();\n  };\n\n  return [response, loading, error, refresh];\n}\n","import { BASE_DOMAIN } from \"../constants\";\n\nexport function networkCall(url, type, payload) {\n  const endpoint = `${BASE_DOMAIN}${url}`;\n  let options = { method: type };\n  // we can add additional header and send payload for non GET methods\n\n  return fetch(endpoint, options)\n    .then((response) => response.json())\n    .then((json) => json);\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStyles } from \"./styles\";\n\nexport default function LoadingButton(props) {\n  const classes = useStyles();\n\n  const { title, loading, ...rest } = props;\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.buttonClassname}\n          disabled={loading}\n          {...rest}\n        >\n          {title}\n        </Button>\n        {loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n  height: 500px;\n  margin: 50px;\n`;\n","import * as React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nimport { MainContainer } from \"./styles\";\n\n// TODO: header names should be translated\nconst columns = [\n  {\n    field: \"Country\",\n    headerName: \"Country\",\n    width: 150,\n  },\n  {\n    field: \"NewConfirmed\",\n    headerName: \"New Confirmed\",\n    type: \"number\",\n    width: 200,\n  },\n  {\n    field: \"NewRecovered\",\n    headerName: \"New Recovered\",\n    type: \"number\",\n    width: 200,\n  },\n  {\n    field: \"NewDeaths\",\n    headerName: \"New Deaths\",\n    type: \"number\",\n    width: 200,\n  },\n  {\n    field: \"TotalConfirmed\",\n    headerName: \"Total Confirmed\",\n    type: \"number\",\n    width: 200,\n  },\n  {\n    field: \"TotalRecovered\",\n    headerName: \"Total Recovered\",\n    type: \"number\",\n    width: 200,\n  },\n  {\n    field: \"TotalDeaths\",\n    headerName: \"Total Deaths\",\n    type: \"number\",\n    width: 200,\n  },\n];\n\nexport default function DataTable(props) {\n  const { data } = props;\n\n  return (\n    <MainContainer>\n      <DataGrid\n        getRowId={(row) => row.ID}\n        rows={data}\n        columns={columns}\n        perPageSize={7}\n      />\n    </MainContainer>\n  );\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Summary from \"../../components/summary\";\nimport { SUMMARY_API } from \"../../constants\";\n\nimport { AppContainer } from \"./styles\";\nimport Spinner from \"../../components/Spinner\";\nimport useApi from \"../../utils/useApi\";\nimport LoadingButton from \"../../components/LoadingButton\";\nimport DataTable from \"../../components/Table\";\n\nfunction App() {\n  const [stats, isLoading, error, refresh] = useApi(SUMMARY_API, \"GET\");\n  // console.log(\"newResp\", stats, isLoading, error);\n\n  const { t } = useTranslation();\n\n  if (!stats) {\n    return <Spinner />;\n  }\n\n  const { Global: details, Countries: countries } = stats;\n  // TODO: do error handling\n  console.log(\"error\", error);\n\n  const sample = () => {\n    throw new Error(\"dadfds\");\n  };\n\n  return (\n    <AppContainer>\n      <LoadingButton\n        title={isLoading ? t(\"please_wait\") : t(\"refresh\")}\n        loading={isLoading}\n        onClick={sample}\n      />\n      <Summary details={details} />\n      <DataTable data={countries} />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { withTranslation } from \"react-i18next\";\n\nconst logErrorToMyService = (error, errorInfo) => {\n  // TODO: can be integrated with services like Sentry etc.,\n  console.log(error, errorInfo);\n};\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n    console.log(\"error boundary\");\n  }\n\n  static getDerivedStateFromError(error) {\n    console.log(\"error boundary 1\");\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(\"error boundary 2\");\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    const { t } = this.props;\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>{t(\"something_wrong\")}</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withTranslation()(ErrorBoundary);\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport translations from \"./locales/en.json\";\n\n// the translations\nconst resources = {\n  en: {\n    translation: translations,\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"en\",\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}